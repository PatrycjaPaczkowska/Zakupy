{"version":3,"sources":["Context.js","containers/Form/ButtonWhite.js","containers/Form/Form.jsx","containers/List/Item.jsx","containers/List/List.jsx","App.js","index.js"],"names":["Context","createContext","AppProvider","children","useReducer","items","action","type","console","log","changeStatus","data","Error","localData","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","ButtonStyled","styled","button","ButtonWhite","onClick","FormStyle","form","TextareaStyle","textarea","Form","useContext","useState","text","setText","onSubmit","e","preventDefault","split","placeholder","onChange","target","Label","label","Input","input","Item","ListItemsStyle","section","List","list","listItems","map","item","id","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGaA,EAAUC,0BA4CRC,EA/BK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAcTC,sBAZN,SAACC,EAAOC,GAEzB,OAAQA,EAAOC,MACZ,IAhBG,MAiBA,OAXS,SAACF,EAAOC,GAE1B,OADAE,QAAQC,IAAIH,EAAOD,OACDC,EAAOD,MASTK,CAAaL,EAAOC,GAC9B,IAjBK,QAkBF,OAAOA,EAAOK,KACjB,QACG,MAAM,IAAIC,MAAM,0CAIyB,IAAI,WACnD,IAAMC,EAAYC,aAAaC,QAAQ,SACvC,OAAOF,EAAYG,KAAKC,MAAMJ,GAAa,MAhBX,mBAc5BR,EAd4B,KAcrBa,EAdqB,KAwBnC,OAJEC,qBAAU,WACTL,aAAaM,QAAQ,QAASJ,KAAKK,UAAUhB,MAC7C,CAACA,IAGD,cAACL,EAAQsB,SAAT,CAAkBC,MAAO,CAAElB,QAAOa,YAAlC,SACIf,K,iVCvCV,IAAMqB,EAAeC,IAAOC,OAAV,KAoBHC,EANK,SAAC,GAAyB,IAAxBxB,EAAuB,EAAvBA,SAAUyB,EAAa,EAAbA,QAC7B,OACG,cAACJ,EAAD,CAAcI,QAASA,EAAvB,SAAiCzB,K,ocCdvC,IAoCM0B,EAAYJ,IAAOK,KAAV,KASTC,EAAgBN,IAAOO,SAAV,KAWJC,EAxDF,WAAO,IAAD,EACYC,qBAAWlC,GAAxBkB,GADC,EACRb,MADQ,EACDa,UADC,EAGQiB,qBAHR,mBAGTC,EAHS,KAGHC,EAHG,KA2BhB,OACG,eAACR,EAAD,CAAWS,SAtBG,SAACC,GACfA,EAAEC,iBACF,IAAInC,EAAQ+B,EAAKK,MAAM,MAEvBvB,EAAS,CACNb,QACAE,KAAM,QAGT8B,EAAQ,KAaR,UACG,cAACN,EAAD,CAAeW,YAAY,gCAA2BnB,MAAOa,EAAMO,SAzBtD,SAACJ,GAAD,OAAOF,EAAQE,EAAEK,OAAOrB,UA0BrC,cAAC,EAAD,CAAahB,KAAK,SAAlB,yBACA,cAAC,EAAD,CAAaqB,QAbK,SAACW,GACxBA,EAAEC,iBAEFtB,EAAS,CACNb,MAAO,GACPE,KAAM,SAQJ,mC,wRCjCT,IAQMsC,EAAQpB,IAAOqB,MAAV,KAOLC,EAAQtB,IAAOuB,MAAV,KAKIC,EApBF,SAAC,GAAe,IAAb1B,EAAY,EAAZA,MACb,OAEG,eAACsB,EAAD,WACG,cAACE,EAAD,CAAOxC,KAAK,aADf,IAC8BgB,M,uFCFpC,IAeM2B,EAAiBzB,IAAO0B,QAAV,KAILC,EAnBF,WAAO,IAAD,IAEUlB,qBAAWlC,GAA9BK,EAFS,EAETA,MAEDgD,GAJU,EAEFnC,SAEJ,UAAGb,EAAM,UAAT,aAAG,EAAUoC,MAAM,MAEvBa,EAAS,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAME,KAAI,SAACC,EAAMC,GAAP,OAAc,cAAC,EAAD,CAAelC,MAAOiC,GAAXC,MAErD,OACG,cAACP,EAAD,UACII,KCGKI,MAbf,WACE,OACG,cAAC,EAAD,UACD,qBAAKC,UAAU,MAAf,SACE,0BAASA,UAAU,aAAnB,UACG,cAAC,EAAD,IACA,cAAC,EAAD,YCNTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8aa38ca3.chunk.js","sourcesContent":["//In this section I used Context and other Hooks\r\nimport React, { createContext, useEffect, useReducer } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nconst ADD = 'ADD';\r\nconst FETCH = 'FETCH';\r\n\r\n//Init value\r\nlet itemsDef;\r\n\r\nconst changeStatus = (items, action) => {\r\n   console.log(action.items);\r\n   return itemsDef = action.items;\r\n}\r\n\r\nconst AppProvider = ({ children }) => {\r\n   //Reducer\r\n   const dataReducer = (items, action) => {\r\n\r\n      switch (action.type) {\r\n         case ADD:\r\n            return changeStatus(items, action);\r\n         case FETCH:\r\n            return action.data;\r\n         default:\r\n            throw new Error(\"No action was found in moneyReducer\")\r\n      }\r\n   }\r\n\r\n   const [items, dispatch] = useReducer(dataReducer, [], () => {\r\n      const localData = localStorage.getItem('items');\r\n      return localData ? JSON.parse(localData) : [];\r\n   });\r\n\r\n   //Download value\r\n     useEffect(() => {\r\n      localStorage.setItem(\"items\", JSON.stringify(items))\r\n   }, [items]);\r\n\r\n   return (\r\n      <Context.Provider value={{ items, dispatch }} >\r\n         {children}\r\n      </Context.Provider>\r\n   )\r\n}\r\n\r\nexport default AppProvider;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.button`\r\n     background-color: white;\r\n     border-radius: 3px;\r\n     border: 0;\r\n     color: #2196F3;\r\n     height: 40px;\r\n     padding: 0 30px;\r\n     margin: 10px;\r\n     box-shadow: 0 3px 5px 2px #0000002e;\r\n     cursor: pointer;\r\n     font-size: 1rem;\r\n     width: 80%;\r\n`;\r\n\r\nconst ButtonWhite = ({children, onClick}) => {\r\n   return ( \r\n      <ButtonStyled onClick={onClick}>{children}</ButtonStyled>\r\n    );\r\n}\r\n \r\nexport default ButtonWhite;","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Context } from '../../Context';\r\nimport ButtonWhite from './ButtonWhite';\r\n\r\nconst Form = () => {\r\n   const { items, dispatch } = useContext(Context);\r\n\r\n   const [text, setText] = useState();\r\n   const handleText = (e) => setText(e.target.value);\r\n\r\n   const sendData = (e) => {\r\n      e.preventDefault();\r\n      let items = text.split(\") \");\r\n\r\n      dispatch({\r\n         items,\r\n         type: 'ADD'\r\n      })\r\n\r\n      setText(\"\");\r\n\r\n   }\r\n const resetLocalStorage = (e) =>{\r\n    e.preventDefault();\r\n\r\n    dispatch({\r\n       items: [],\r\n       type: 'ADD'\r\n    })\r\n\r\n }\r\n   return (\r\n      <FormStyle onSubmit={sendData}>\r\n         <TextareaStyle placeholder=\"Wklej listę po przecinku\" value={text} onChange={handleText}></TextareaStyle>\r\n         <ButtonWhite type=\"submit\">Wyślij</ButtonWhite>\r\n         <ButtonWhite onClick={resetLocalStorage}>Wyczyść</ButtonWhite>\r\n      </FormStyle>\r\n   );\r\n}\r\n\r\nconst FormStyle = styled.form`\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n   width: 100vw;\r\n   height: auto;\r\n`;\r\n\r\nconst TextareaStyle = styled.textarea`\r\n   width: 80%;\r\n   min-height: 150px;\r\n   padding: 15px;\r\n   background-color: #978e8e38;\r\n   color: white;\r\n   border: none;\r\n   border-radius: 5px;\r\n   overflow: hidden;\r\n`;\r\n\r\nexport default Form;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = ({ value }) => {\r\n   return (\r\n\r\n      <Label>\r\n         <Input type=\"checkbox\" /> {value}\r\n      </Label>\r\n   );\r\n}\r\nconst Label = styled.label`\r\n   display: block;\r\n   text-align: left;\r\n   cursor: pointer;\r\n   margin: 15px 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n   font-size: 0.4rem;\r\n   text-transform: capitalize;\r\n`;\r\n\r\nexport default Item;\r\n\r\n","import React, { useContext } from 'react';\r\nimport Item from './Item';\r\nimport { Context } from '../../Context';\r\nimport styled from 'styled-components';\r\n\r\nconst List = () => {\r\n\r\n   const {items, dispatch} = useContext(Context);\r\n\r\n   const list = items[0]?.split(\")\");\r\n\r\n   const listItems = list?.map((item, id) => <Item key={id} value={item} />)\r\n\r\n   return (\r\n      <ListItemsStyle>\r\n         {listItems}\r\n      </ListItemsStyle>\r\n   );\r\n}\r\n\r\nconst ListItemsStyle = styled.section`\r\n   width: 80%;\r\n`;\r\n\r\nexport default List;","import './App.css';\nimport Form from './containers/Form/Form';\nimport List from './containers/List/List';\nimport AppProvider from './Context';\n\nfunction App() {\n  return (\n     <AppProvider>\n    <div className=\"App\">\n      <section className=\"App-header\">\n         <Form />\n         <List />\n      </section>\n    </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}