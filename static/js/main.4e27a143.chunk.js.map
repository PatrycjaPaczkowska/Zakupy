{"version":3,"sources":["Context.js","containers/Form/ButtonWhite.js","containers/Form/Form.jsx","containers/List/Item.jsx","containers/List/List.jsx","App.js","index.js"],"names":["Context","createContext","AppProvider","children","useReducer","items","action","type","concat","changeStatus","data","localStorage","clear","newItemsTab","filter","item","console","log","handleDeleteOne","value","Error","localData","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","ButtonStyled","styled","button","ButtonWhite","onClick","FormStyle","form","TextareaStyle","textarea","RadioStyle","section","Form","useContext","ref","useRef","useState","text","setText","onSubmit","e","preventDefault","current","operator","typeOfList","listItems","split","length","placeholder","onChange","target","name","Label","label","ButtonSmall","Item","textToShow","handlerDelButton","ListItemsStyle","List","map","id","newText","indexOf","ButtonToggle","App","toggleVisibility","setToggleVisibility","className","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e27a143.chunk.js","sourcesContent":["//In this section I used Context and other Hooks\r\nimport React, { createContext, useEffect, useReducer } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nconst ADD = 'ADD';\r\nconst FETCH = 'FETCH';\r\nconst DELETE = 'DELETE';\r\nconst DELETE_ONE = 'DELETE_ONE';\r\n\r\nconst changeStatus = (items, action) => {\r\n   const newTab = items.concat(action.items);\r\n   return newTab;\r\n}\r\n\r\nconst handleDelete = () => {\r\n   const newItemsTab = [];\r\n   localStorage.clear();\r\n\r\n   return [...newItemsTab];\r\n}\r\n\r\n// Function delete \r\nconst handleDeleteOne = (items, action) => {\r\n   const newItemsTab = items.filter( item => {\r\n      console.log(\"item\" + item);\r\n      console.log(\"action\" + action);\r\n      return item !== action;\r\n   })\r\n   return [...newItemsTab];\r\n}\r\n\r\n\r\nconst AppProvider = ({ children }) => {\r\n   //Reducer\r\n   const dataReducer = (items, action) => {\r\n\r\n      switch (action.type) {\r\n         case ADD:\r\n            return changeStatus(items, action);\r\n         case FETCH:\r\n            return action.data;\r\n         case DELETE:\r\n            return handleDelete();\r\n         case DELETE_ONE:\r\n            return handleDeleteOne(items, action.value); \r\n         default:\r\n            throw new Error(\"No action was found in dataReducer\")\r\n      }\r\n   }\r\n\r\n   const [items, dispatch] = useReducer(dataReducer, [], () => {\r\n      const localData = localStorage.getItem('items');\r\n      return localData ? JSON.parse(localData) : [];\r\n   });\r\n\r\n   //Download value\r\n     useEffect(() => {\r\n      localStorage.setItem(\"items\", JSON.stringify(items))\r\n   }, [items]);\r\n\r\n   return (\r\n      <Context.Provider value={{ items, dispatch }} >\r\n         {children}\r\n      </Context.Provider>\r\n   )\r\n}\r\n\r\nexport default AppProvider;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.button`\r\n     background-color: white;\r\n     border-radius: 3px;\r\n     border: 0;\r\n     color: #2196F3;\r\n     min-height: 40px;\r\n     padding: 5px 30px;\r\n     margin: 10px;\r\n     box-shadow: 0 3px 5px 2px #0000002e;\r\n     cursor: pointer;\r\n     font-size: 1rem;\r\n     width: 80%;\r\n`;\r\n\r\nconst ButtonWhite = ({children, onClick}) => {\r\n   return ( \r\n      <ButtonStyled onClick={onClick}>{children}</ButtonStyled>\r\n    );\r\n}\r\n \r\nexport default ButtonWhite;","import React, { useContext, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Context } from '../../Context';\r\nimport ButtonWhite from './ButtonWhite';\r\n\r\nconst Form = () => {\r\n   // eslint-disable-next-line\r\n   const { items, dispatch } = useContext(Context);\r\n   const ref = useRef(\"usual\");\r\n\r\n   const [text, setText] = useState();\r\n\r\n   const handleText = (e) => setText(e.target.value);\r\n\r\n   const sendData = (e) => {\r\n      e.preventDefault();\r\n      if (!ref.current || !text) return;\r\n\r\n      const typeOfList = ref.current.typeOfList;\r\n\r\n      let operator;\r\n\r\n      if (typeOfList === 'usual') operator = ',';\r\n      if (typeOfList === 'diet') operator = ')';\r\n\r\n      const notCleanTab = text.split(operator);\r\n      const listItems = notCleanTab.filter(item => item.length > 1);\r\n\r\n\r\n      dispatch({\r\n         items: listItems,\r\n         type: 'ADD'\r\n      })\r\n\r\n      setText(\"\");\r\n   }\r\n\r\n   const resetLocalStorage = (e) => {\r\n      e.preventDefault();\r\n\r\n      dispatch({\r\n         type: 'DELETE',\r\n      })\r\n\r\n   }\r\n\r\n   const setOption = e => {\r\n      ref.current = { typeOfList: e.target.value };\r\n   }\r\n\r\n   return (\r\n      <FormStyle onSubmit={sendData}>\r\n         <TextareaStyle placeholder=\"Wklej listę po przecinku, lub bezpośrednio z pliku PDF od motywatora i zaznacz odpowiednią opcję:\" value={text} onChange={handleText}></TextareaStyle>\r\n         <RadioStyle onChange={setOption}>\r\n            <label>\r\n               <input\r\n                  name=\"typeOfList\"\r\n                  type=\"radio\"\r\n                  value=\"diet\"\r\n               /> Od motywatora\r\n        </label>\r\n            <label>\r\n               <input\r\n                  name=\"typeOfList\"\r\n                  type=\"radio\"\r\n                  value=\"usual\"\r\n               /> Zwykła lista\r\n        </label>\r\n         </RadioStyle>\r\n         <ButtonWhite type=\"submit\">Dodaj</ButtonWhite>\r\n         <ButtonWhite onClick={resetLocalStorage}>Wyczyść wszystko</ButtonWhite>\r\n\r\n      </FormStyle>\r\n   );\r\n}\r\n\r\nconst FormStyle = styled.form`\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n   width: 100vw;\r\n   height: auto;\r\n`;\r\n\r\nconst TextareaStyle = styled.textarea`\r\n   width: 80%;\r\n   min-height: 150px;\r\n   padding: 15px;\r\n   background-color: #978e8e38;\r\n   color: white;\r\n   border: none;\r\n   border-radius: 5px;\r\n   overflow: hidden;\r\n`;\r\n\r\nconst RadioStyle = styled.section`\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n   font-size: 1rem;\r\n   margin: 10px 0;\r\n\r\n   & > label {\r\n      margin: 5px 0;\r\n   }\r\n`;\r\nexport default Form;","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst Item = ({ value, textToShow, handlerDelButton }) => {\r\n\r\n   const handleDeleteTask = () => {\r\n      handlerDelButton({\r\n         value,\r\n         type: 'DELETE_ONE'\r\n      });\r\n   }\r\n\r\n   return (\r\n      <Label>\r\n         <input type=\"checkbox\" /> {textToShow}\r\n         <ButtonSmall onClick={handleDeleteTask}>Usuń</ButtonSmall>\r\n      </Label>\r\n   );\r\n}\r\nconst Label = styled.label`\r\n   display: block;\r\n   text-align: left;\r\n   cursor: pointer;\r\n   margin: 15px 0;\r\n`;\r\n\r\nconst ButtonSmall = styled.button`\r\n   background-color: white;\r\n     border-radius: 3px;\r\n     border: 0;\r\n     color: #2196F3;\r\n     box-shadow: 0 3px 5px 2px #0000002e;\r\n     cursor: pointer;\r\n     font-size: 0.6rem;\r\n     min-height: 10px;\r\n     padding: 5px 10px;\r\n     margin: 0 10px;\r\n`;\r\n\r\nexport default Item;\r\n\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Context } from '../../Context';\r\nimport Item from './Item';\r\n\r\nconst List = () => {\r\n   // eslint-disable-next-line\r\n   const { items, dispatch } = useContext(Context);\r\n\r\n   const listItems = items.map((item, id) => {\r\n      const isParenthesis = item.indexOf('(');\r\n      let newText;\r\n      if(isParenthesis > 0){\r\n         newText =`${item})`;\r\n      } else {\r\n         newText = item;\r\n      }\r\n      \r\n      return item && <Item key={id} value={item} textToShow={newText} handlerDelButton={dispatch} />\r\n   });\r\n\r\n   return (\r\n      <ListItemsStyle>\r\n         <p>Pozostało: {listItems.length} </p>\r\n         {listItems}\r\n      </ListItemsStyle>\r\n   );\r\n}\r\n\r\nconst ListItemsStyle = styled.section`\r\n   width: 80%;\r\n   & > p {\r\n      margin: 20px 0;\r\n   }\r\n`;\r\n\r\nexport default List;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport Form from './containers/Form/Form';\nimport List from './containers/List/List';\nimport AppProvider from './Context';\n\nconst App = () => {\n   let [toggleVisibility, setToggleVisibility] = useState(true);\n\n   const handleToggleVisibility = () => {\n      setToggleVisibility(prev => !prev);\n   }\n\n   const text = toggleVisibility ? 'Schowaj' : 'Pokaż';\n\n   return (\n      <AppProvider>\n         <div className=\"App\">\n            <section className=\"App-header\">\n               <h1>Lista zakupów</h1>\n               <ButtonToggle onClick={handleToggleVisibility}>{text}</ButtonToggle>\n               {toggleVisibility ? <Form /> : null}\n               <List />\n            </section>\n         </div>\n      </AppProvider>\n   );\n}\n\nconst ButtonToggle = styled.button`\n   outline: none;\n\talign-self: baseline;\n\ttext-align: left;\n\tborder: none;\n\tbackground-color: transparent;\n\tcolor: #fff9f9a3;\n\tcursor: pointer;\n\twidth: 80%;\n\tmargin: 0 auto 10px auto;\n   text-shadow: 0 0 5px black;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}