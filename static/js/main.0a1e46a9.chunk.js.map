{"version":3,"sources":["Context.js","containers/Form/ButtonWhite.js","containers/Form/Form.jsx","containers/List/Item.jsx","containers/List/List.jsx","App.js","index.js"],"names":["Context","createContext","AppProvider","children","useReducer","items","action","type","concat","changeStatus","data","localStorage","clear","Error","localData","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","ButtonStyled","styled","button","ButtonWhite","onClick","FormStyle","form","TextareaStyle","textarea","RadioStyle","section","Form","useContext","ref","useRef","useState","text","setText","onSubmit","e","preventDefault","current","operator","typeOfList","listItems","split","filter","item","length","placeholder","onChange","target","name","Label","label","Input","input","Item","isParenthesis","ListItemsStyle","List","join","indexOf","map","id","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a1e46a9.chunk.js","sourcesContent":["//In this section I used Context and other Hooks\r\nimport React, { createContext, useEffect, useReducer } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nconst ADD = 'ADD';\r\nconst FETCH = 'FETCH';\r\nconst DELETE = 'DELETE';\r\n\r\nconst changeStatus = (items, action) => {\r\n   const newTab = items.concat(action.items);\r\n   return newTab;\r\n}\r\n\r\nconst handleDelete = () => {\r\n   const newItemsTab = [];\r\n   localStorage.clear();\r\n\r\n   return [...newItemsTab];\r\n}\r\n\r\nconst AppProvider = ({ children }) => {\r\n   //Reducer\r\n   const dataReducer = (items, action) => {\r\n\r\n      switch (action.type) {\r\n         case ADD:\r\n            return changeStatus(items, action);\r\n         case FETCH:\r\n            return action.data;\r\n           case DELETE:\r\n              return handleDelete(); \r\n         default:\r\n            throw new Error(\"No action was found in moneyReducer\")\r\n      }\r\n   }\r\n\r\n   const [items, dispatch] = useReducer(dataReducer, [], () => {\r\n      const localData = localStorage.getItem('items');\r\n      return localData ? JSON.parse(localData) : [];\r\n   });\r\n\r\n   //Download value\r\n     useEffect(() => {\r\n      localStorage.setItem(\"items\", JSON.stringify(items))\r\n   }, [items]);\r\n\r\n   return (\r\n      <Context.Provider value={{ items, dispatch }} >\r\n         {children}\r\n      </Context.Provider>\r\n   )\r\n}\r\n\r\nexport default AppProvider;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.button`\r\n     background-color: white;\r\n     border-radius: 3px;\r\n     border: 0;\r\n     color: #2196F3;\r\n     min-height: 40px;\r\n     padding: 5px 30px;\r\n     margin: 10px;\r\n     box-shadow: 0 3px 5px 2px #0000002e;\r\n     cursor: pointer;\r\n     font-size: 1rem;\r\n     width: 80%;\r\n`;\r\n\r\nconst ButtonWhite = ({children, onClick}) => {\r\n   return ( \r\n      <ButtonStyled onClick={onClick}>{children}</ButtonStyled>\r\n    );\r\n}\r\n \r\nexport default ButtonWhite;","import React, { useContext, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Context } from '../../Context';\r\nimport ButtonWhite from './ButtonWhite';\r\n\r\nconst Form = () => {\r\n   // eslint-disable-next-line\r\n   const { items, dispatch } = useContext(Context);\r\n   const ref = useRef(\"usual\");\r\n\r\n   const [text, setText] = useState();\r\n\r\n   const handleText = (e) => setText(e.target.value);\r\n\r\n   const sendData = (e) => {\r\n      e.preventDefault();\r\n      if (!ref.current) return;\r\n\r\n      const typeOfList = ref.current.typeOfList\r\n\r\n      let operator;\r\n\r\n      if (typeOfList === 'usual') operator = ',';\r\n      if (typeOfList === 'diet') operator = ')';\r\n\r\n      const notCleanTab = text.split(operator);\r\n      const listItems = notCleanTab.filter(item => item.length > 0);\r\n\r\n   \r\n      dispatch({\r\n         items: listItems,\r\n         type: 'ADD'\r\n      })\r\n\r\n      setText(\"\");\r\n   }\r\n\r\n   const resetLocalStorage = (e) => {\r\n      e.preventDefault();\r\n\r\n      dispatch({\r\n         type: 'DELETE',\r\n      })\r\n\r\n   }\r\n\r\n   const setOption = e => {\r\n      ref.current = { typeOfList: e.target.value };\r\n   }\r\n\r\n   return (\r\n      <FormStyle onSubmit={sendData}>\r\n\r\n         <TextareaStyle placeholder=\"Wklej listę po przecinku\" value={text} onChange={handleText}></TextareaStyle>\r\n         <RadioStyle onChange={setOption}>\r\n            <label>\r\n               <input\r\n                  name=\"typeOfList\"\r\n                  type=\"radio\"\r\n                  value=\"diet\"\r\n               /> Od motywatora\r\n        </label>\r\n            <label>\r\n               <input\r\n                  name=\"typeOfList\"\r\n                  type=\"radio\"\r\n                  value=\"usual\"\r\n               /> Zwykła lista\r\n        </label>\r\n         </RadioStyle>\r\n         <ButtonWhite type=\"submit\">Dodaj</ButtonWhite>\r\n         <ButtonWhite onClick={resetLocalStorage}>Wyczyść wszystko</ButtonWhite>\r\n\r\n      </FormStyle>\r\n   );\r\n}\r\n\r\nconst FormStyle = styled.form`\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n   width: 100vw;\r\n   height: auto;\r\n`;\r\n\r\nconst TextareaStyle = styled.textarea`\r\n   width: 80%;\r\n   min-height: 150px;\r\n   padding: 15px;\r\n   background-color: #978e8e38;\r\n   color: white;\r\n   border: none;\r\n   border-radius: 5px;\r\n   overflow: hidden;\r\n`;\r\n\r\nconst RadioStyle = styled.section`\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n   font-size: 1rem;\r\n   margin: 10px 0;\r\n\r\n   & > label {\r\n      margin: 5px 0;\r\n   }\r\n`;\r\nexport default Form;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = ({ value, isParenthesis }) => {\r\n   return (\r\n      <Label>\r\n         <Input type=\"checkbox\" /> {value}{isParenthesis && ')'}\r\n      </Label>\r\n   );\r\n}\r\nconst Label = styled.label`\r\n   display: block;\r\n   text-align: left;\r\n   cursor: pointer;\r\n   margin: 15px 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n   font-size: 0.4rem;\r\n   text-transform: capitalize;\r\n`;\r\n\r\nexport default Item;\r\n\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Context } from '../../Context';\r\nimport Item from './Item';\r\n\r\nconst List = () => {\r\n\r\n   const { items, dispatch } = useContext(Context);\r\n   const value = items.join(\"\");\r\n\r\n   const isParenthesis = value.indexOf(\"(\");\r\n\r\n   const listItems = items.map((item, id) => ( item &&  <Item key={id} value={item} />));\r\n\r\n   return (\r\n      <ListItemsStyle>\r\n         {listItems}\r\n      </ListItemsStyle>\r\n   );\r\n}\r\n\r\nconst ListItemsStyle = styled.section`\r\n   width: 80%;\r\n`;\r\n\r\nexport default List;","import './App.css';\nimport Form from './containers/Form/Form';\nimport List from './containers/List/List';\nimport AppProvider from './Context';\n\nfunction App() {\n  return (\n     <AppProvider>\n    <div className=\"App\">\n      <section className=\"App-header\">\n         <Form />\n         <List />\n      </section>\n    </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}